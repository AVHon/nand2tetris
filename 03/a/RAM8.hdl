/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 * Alex Von Hoene	10 dec 2012
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    
	Register(in=in, load=al, out=ao);
	Register(in=in, load=bl, out=bo);
	Register(in=in, load=cl, out=co);
	Register(in=in, load=dl, out=do);
	Register(in=in, load=el, out=eo);
	Register(in=in, load=fl, out=fo);
	Register(in=in, load=gl, out=go);
	Register(in=in, load=hl, out=ho);
	
	////IF NOT LOAD, READ DATA FROM REGISTER address////
	Mux8Way16(a=ao, b=bo, c=co, d=do, e=eo, f=fo, g=go, h=ho, sel=address, out=out);
	
	////IF LOAD, WRITE in TO REGISTER address////
	DMux8Way(in=load, sel=address, a=al, b=bl, c=cl, d=dl, e=el, f=fl, g=gl, h=hl);
}
